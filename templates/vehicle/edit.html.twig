{% extends 'base.html.twig' %}

{% block title %}Edit Vehicle - MyPOS{% endblock %}

{% block stylesheets %}
<style>
.autocomplete-container {
    position: relative;
}

.autocomplete-suggestions {
    position: absolute;
    top: 100%;
    left: 0;
    right: 0;
    background: white;
    border: 1px solid #ced4da;
    border-top: none;
    border-radius: 0 0 0.375rem 0.375rem;
    max-height: 200px;
    overflow-y: auto;
    z-index: 1000;
    display: none;
}

.autocomplete-suggestion {
    padding: 8px 12px;
    cursor: pointer;
    border-bottom: 1px solid #f8f9fa;
}

.autocomplete-suggestion:hover,
.autocomplete-suggestion.active {
    background-color: #f8f9fa;
}

.autocomplete-suggestion:last-child {
    border-bottom: none;
}

.autocomplete-suggestions.show {
    display: block;
}
</style>
{% endblock %}

{% block body %}
<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header">
                    <h3>Edit Vehicle: {{ vehicle.displayName }}</h3>
                </div>
                <div class="card-body">
                    {% if errors is defined and errors|length > 0 %}
                        <div class="alert alert-danger">
                            <h6>Please fix the following errors:</h6>
                            <ul class="mb-0">
                                {% for error in errors %}
                                    <li>{{ error }}</li>
                                {% endfor %}
                            </ul>
                        </div>
                    {% endif %}
                    
                    <form method="post">
                        <div class="mb-3">
                            <label for="type" class="form-label">Vehicle Type</label>
                            <select name="type" id="type" class="form-select" required onchange="toggleSpecificFields()">
                                <option value="motorcycle" {{ vehicle.type == 'motorcycle' ? 'selected' : '' }}>Motorcycle</option>
                                <option value="car" {{ vehicle.type == 'car' ? 'selected' : '' }}>Car</option>
                                <option value="truck" {{ vehicle.type == 'truck' ? 'selected' : '' }}>Truck</option>
                                <option value="trailer" {{ vehicle.type == 'trailer' ? 'selected' : '' }}>Trailer</option>
                            </select>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="brand" class="form-label">Brand</label>
                                    <div class="autocomplete-container">
                                        <input type="text" name="brand" id="brand" class="form-control" value="{{ dto.brand }}" required autocomplete="off">
                                        <div id="brand-suggestions" class="autocomplete-suggestions"></div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="model" class="form-label">Model</label>
                                    <div class="autocomplete-container">
                                        <input type="text" name="model" id="model" class="form-control" value="{{ dto.model }}" required autocomplete="off">
                                        <div id="model-suggestions" class="autocomplete-suggestions"></div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="engine_capacity" class="form-label">Engine Capacity (L)</label>
                                    <input type="number" name="engine_capacity" id="engine_capacity" class="form-control" step="0.1" min="0" value="{{ dto.engineCapacity }}">
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="colour" class="form-label">Colour</label>
                                    <input type="text" name="colour" id="colour" class="form-control" value="{{ dto.colour }}" required>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="price" class="form-label">Price ($)</label>
                                    <input type="number" name="price" id="price" class="form-control" step="0.01" min="0" value="{{ dto.price }}" required>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="quantity" class="form-label">Quantity</label>
                                    <input type="number" name="quantity" id="quantity" class="form-control" min="0" value="{{ dto.quantity }}" required>
                                </div>
                            </div>
                        </div>

                        <!-- Car specific fields -->
                        <div id="car-fields" style="display: {{ vehicle.type == 'car' ? 'block' : 'none' }};">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="doors" class="form-label">Doors</label>
                                        <select name="doors" id="doors" class="form-select">
                                            <option value="2" {% if dto.doors == 2 %}selected{% endif %}>2</option>
                                            <option value="3" {% if dto.doors == 3 %}selected{% endif %}>3</option>
                                            <option value="4" {% if dto.doors == 4 %}selected{% endif %}>4</option>
                                            <option value="5" {% if dto.doors == 5 %}selected{% endif %}>5</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="category" class="form-label">Category</label>
                                        <input type="text" name="category" id="category" class="form-control" value="{{ dto.category }}" placeholder="e.g., Sedan, SUV, Hatchback">
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Truck specific fields -->
                        <div id="truck-fields" style="display: {{ vehicle.type == 'truck' ? 'block' : 'none' }};">
                            <div class="mb-3">
                                <label for="beds" class="form-label">Beds</label>
                                <input type="number" name="beds" id="beds" class="form-control" min="1" value="{{ dto.beds }}">
                            </div>
                        </div>

                        <!-- Trailer specific fields -->
                        <div id="trailer-fields" style="display: {{ vehicle.type == 'trailer' ? 'block' : 'none' }};">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="load_capacity_kg" class="form-label">Load Capacity (kg)</label>
                                        <input type="number" name="load_capacity_kg" id="load_capacity_kg" class="form-control" step="0.1" min="0" value="{{ dto.loadCapacityKg }}">
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="axles" class="form-label">Axles</label>
                                        <input type="number" name="axles" id="axles" class="form-control" min="1" value="{{ dto.axles }}">
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                            <a href="{{ path('app_merchant_vehicles') }}" class="btn btn-secondary">Cancel</a>
                            <button type="submit" class="btn btn-primary">Update Vehicle</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block javascripts %}
<script>
let carData = [];
let selectedBrand = '{{ vehicle.brand }}';

// Load car data when page loads
document.addEventListener('DOMContentLoaded', function() {
    loadCarData();
    setupAutocomplete();
});

async function loadCarData() {
    try {
        const response = await fetch('/api/car-data');
        carData = await response.json();
    } catch (error) {
        console.error('Failed to load car data:', error);
    }
}

function setupAutocomplete() {
    const brandInput = document.getElementById('brand');
    const modelInput = document.getElementById('model');
    const brandSuggestions = document.getElementById('brand-suggestions');
    const modelSuggestions = document.getElementById('model-suggestions');

    // Brand autocomplete
    brandInput.addEventListener('input', function() {
        const query = this.value.toLowerCase();
        const vehicleType = document.getElementById('type').value;
        
        // Only show autocomplete for cars
        if (vehicleType !== 'car' || query.length < 1) {
            hideSuggestions(brandSuggestions);
            return;
        }

        const brands = carData.map(car => car.brand).filter(brand => 
            brand.toLowerCase().includes(query)
        );
        
        showSuggestions(brandSuggestions, brands, brandInput);
    });

    // Model autocomplete
    modelInput.addEventListener('input', function() {
        const query = this.value.toLowerCase();
        const vehicleType = document.getElementById('type').value;
        
        // Only show autocomplete for cars
        if (vehicleType !== 'car' || query.length < 1 || !selectedBrand) {
            hideSuggestions(modelSuggestions);
            return;
        }

        const brandData = carData.find(car => car.brand === selectedBrand);
        if (!brandData) return;

        const models = brandData.models.filter(model => 
            model.toLowerCase().includes(query)
        );
        
        showSuggestions(modelSuggestions, models, modelInput);
    });

    // Brand selection
    brandInput.addEventListener('blur', function() {
        setTimeout(() => hideSuggestions(brandSuggestions), 200);
    });

    // Model selection
    modelInput.addEventListener('blur', function() {
        setTimeout(() => hideSuggestions(modelSuggestions), 200);
    });
}

function showSuggestions(container, items, input) {
    container.innerHTML = '';
    
    if (items.length === 0) {
        hideSuggestions(container);
        return;
    }

    items.slice(0, 10).forEach(item => {
        const suggestion = document.createElement('div');
        suggestion.className = 'autocomplete-suggestion';
        suggestion.textContent = item;
        
        suggestion.addEventListener('click', function() {
            input.value = item;
            hideSuggestions(container);
            
            if (input.id === 'brand') {
                selectedBrand = item;
                document.getElementById('model').value = '';
            }
        });
        
        container.appendChild(suggestion);
    });
    
    container.classList.add('show');
}

function hideSuggestions(container) {
    container.classList.remove('show');
}

function toggleSpecificFields() {
    const type = document.getElementById('type').value;
    
    // Hide all specific fields
    document.getElementById('car-fields').style.display = 'none';
    document.getElementById('truck-fields').style.display = 'none';
    document.getElementById('trailer-fields').style.display = 'none';
    
    // Clear autocomplete suggestions when switching vehicle types
    hideSuggestions(document.getElementById('brand-suggestions'));
    hideSuggestions(document.getElementById('model-suggestions'));
    
    // Clear selected brand when switching away from cars
    if (type !== 'car') {
        selectedBrand = '';
    }
    
    // Show relevant fields
    if (type === 'car') {
        document.getElementById('car-fields').style.display = 'block';
    } else if (type === 'truck') {
        document.getElementById('truck-fields').style.display = 'block';
    } else if (type === 'trailer') {
        document.getElementById('trailer-fields').style.display = 'block';
    }
}
</script>
{% endblock %}
